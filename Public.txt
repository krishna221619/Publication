// Experiment 3: Imagine a publishing company which does marketing for book and audio cassette
// versions. Create a class Publication that stores the title (a string) and price (type float) of a
// Publication.
// From this class derive two classes: book, which adds a page count (type int), and tape, which adds a
// playing time in minutes (type float).
// Write a program that instantiates the book and tape classes, allows user to enter data and displays
// the data members. If an exception is caught, replace all the data member values with zero values.

// -------------------------------------------------------------------------------------------------------------------------------------
#include <iostream>
#include <string>
using namespace std;

class Publication
{
public:
    Publication(string title, float price)
        : title_(title), price_(price) {}
    string title() const { return title_; }
    float price() const { return price_; }

private:
    string title_;
    float price_;
};

class Book : public Publication
{
public:
    Book(string title, float price, int page_count)
        : Publication(title, price), page_count_(page_count) {}
    int page_count() const { return page_count_; }

private:
    int page_count_;
};

class Tape : public Publication
{
public:
    Tape(string title, float price, float playing_time)
        : Publication(title, price), playing_time_(playing_time) {}
    float playing_time() const { return playing_time_; }

private:
    float playing_time_;
};

int main()
{
    string title;
    float price;
    int page_count;
    float playing_time;
    try
    {
        cout << "Enter the title of the publication: ";
        cin >> title;
        cout << "Enter the price of the publication: ";
        cin >> price;

        cout << "Enter the page count: ";
        cin >> page_count;

        cout << "Enter the playing time in minutes: ";
        cin >> playing_time;
    }
    catch (...)
    {
        Book book("", 0, 0);
        Tape tape("", 0, 0);
    }
        Book book(title, price, page_count);
        Tape tape(title, price, playing_time);

    cout << "Book:" << endl;
    cout << "Title: " << book.title() << endl;
    cout << "Price: " << book.price() << endl;
    cout << "Page count: " << book.page_count() << endl;

    cout << "Tape:" << endl;
    cout << "Title: " << tape.title() << endl;
    cout << "Price: " << tape.price() << endl;
    cout << "Playing time: " << tape.playing_time() << endl;
}
